<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="TestSuite" duration-ms="12363" started-at="2023-01-05T14:11:08Z" finished-at="2023-01-05T14:11:20Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="12363" started-at="2023-01-05T14:11:08Z" finished-at="2023-01-05T14:11:20Z">
      <class name="example.example.testcases.GoRestTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="setUp" is-config="true" duration-ms="1143" started-at="2023-01-05T14:11:07Z" finished-at="2023-01-05T14:11:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeTest" is-config="true" duration-ms="1" started-at="2023-01-05T14:11:08Z" finished-at="2023-01-05T14:11:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeClass" is-config="true" duration-ms="10" started-at="2023-01-05T14:11:08Z" finished-at="2023-01-05T14:11:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2023-01-05T14:11:08Z" finished-at="2023-01-05T14:11:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void example.example.testcases.GoRestTestCase.createNewUserTest(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createNewUserTest(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="createNewUserTest" duration-ms="4825" started-at="2023-01-05T14:11:08Z" finished-at="2023-01-05T14:11:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7164ca4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUserTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="afterMethod" is-config="true" duration-ms="327" started-at="2023-01-05T14:11:13Z" finished-at="2023-01-05T14:11:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createNewUserTest status=SUCCESS method=GoRestTestCase.createNewUserTest(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-01-05T14:11:13Z" finished-at="2023-01-05T14:11:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void example.example.testcases.GoRestTestCase.createNewUserWithData(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="createNewUserWithData(java.util.Hashtable)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="createNewUserWithData" duration-ms="736" started-at="2023-01-05T14:11:13Z" data-provider="data" finished-at="2023-01-05T14:11:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Status=active, Name=Test Name1, Gender=female, Email=testemail5@email.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at example.example.testcases.GoRestTestCase.createNewUserWithData(GoRestTestCase.java:136)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUserWithData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="afterMethod" is-config="true" duration-ms="68" started-at="2023-01-05T14:11:15Z" finished-at="2023-01-05T14:11:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createNewUserWithData status=FAILURE method=GoRestTestCase.createNewUserWithData(java.util.Hashtable)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-01-05T14:11:15Z" finished-at="2023-01-05T14:11:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void example.example.testcases.GoRestTestCase.createNewUserWithData(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="createNewUserWithData(java.util.Hashtable)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="createNewUserWithData" duration-ms="1236" started-at="2023-01-05T14:11:15Z" data-provider="data" finished-at="2023-01-05T14:11:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Status=inactive, Name=Test Name2, Gender=male, Email=testemail6@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at example.example.testcases.GoRestTestCase.createNewUserWithData(GoRestTestCase.java:136)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUserWithData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="afterMethod" is-config="true" duration-ms="71" started-at="2023-01-05T14:11:16Z" finished-at="2023-01-05T14:11:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createNewUserWithData status=FAILURE method=GoRestTestCase.createNewUserWithData(java.util.Hashtable)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-01-05T14:11:16Z" finished-at="2023-01-05T14:11:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void example.example.testcases.GoRestTestCase.getUsersTest(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getUsersTest(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="getUsersTest" duration-ms="1264" started-at="2023-01-05T14:11:16Z" finished-at="2023-01-05T14:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7164ca4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUsersTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="afterMethod" is-config="true" duration-ms="48" started-at="2023-01-05T14:11:17Z" finished-at="2023-01-05T14:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getUsersTest status=SUCCESS method=GoRestTestCase.getUsersTest(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-01-05T14:11:17Z" finished-at="2023-01-05T14:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void example.example.testcases.GoRestTestCase.getSpecificUserTest(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getSpecificUserTest(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="getSpecificUserTest" duration-ms="574" started-at="2023-01-05T14:11:17Z" depends-on-methods="example.example.testcases.GoRestTestCase.getUsersTest" finished-at="2023-01-05T14:11:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7164ca4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpecificUserTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="afterMethod" is-config="true" duration-ms="50" started-at="2023-01-05T14:11:18Z" finished-at="2023-01-05T14:11:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSpecificUserTest status=SUCCESS method=GoRestTestCase.getSpecificUserTest(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="updateNewlyCreatedUser(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="updateNewlyCreatedUser" duration-ms="1556" started-at="2023-01-05T14:11:18Z" depends-on-methods="example.example.testcases.GoRestTestCase.createNewUserTest" finished-at="2023-01-05T14:11:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7164ca4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateNewlyCreatedUser -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-01-05T14:11:18Z" finished-at="2023-01-05T14:11:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void example.example.testcases.GoRestTestCase.updateNewlyCreatedUser(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="afterMethod" is-config="true" duration-ms="56" started-at="2023-01-05T14:11:19Z" finished-at="2023-01-05T14:11:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateNewlyCreatedUser status=SUCCESS method=GoRestTestCase.updateNewlyCreatedUser(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="deleteNewUser(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="deleteNewUser" duration-ms="855" started-at="2023-01-05T14:11:19Z" depends-on-methods="example.example.testcases.GoRestTestCase.updateNewlyCreatedUser" finished-at="2023-01-05T14:11:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7164ca4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteNewUser -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-01-05T14:11:19Z" finished-at="2023-01-05T14:11:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void example.example.testcases.GoRestTestCase.deleteNewUser(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="afterMethod" is-config="true" duration-ms="48" started-at="2023-01-05T14:11:20Z" finished-at="2023-01-05T14:11:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteNewUser status=SUCCESS method=GoRestTestCase.deleteNewUser(org.testng.ITestContext)[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="AfterClass" is-config="true" duration-ms="0" started-at="2023-01-05T14:11:20Z" finished-at="2023-01-05T14:11:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="afterTest" is-config="true" duration-ms="0" started-at="2023-01-05T14:11:20Z" finished-at="2023-01-05T14:11:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.example.testcases.GoRestTestCase@2ef3eef9]" name="tearDown" is-config="true" duration-ms="0" started-at="2023-01-05T14:11:20Z" finished-at="2023-01-05T14:11:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- example.example.testcases.GoRestTestCase -->
    </test> <!-- Test1 -->
  </suite> <!-- TestSuite -->
</testng-results>
